// <auto-generated />
using System;
using FolderCleaner.Worker.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FolderCleaner.Worker.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("FolderCleaner.Worker.Models.CleaningHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CleaningRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CleaningSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CleaningStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CleaningStatusDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RunsAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalFiles")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TriggeredBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CleaningRecordId");

                    b.ToTable("CleaningHistory");
                });

            modelBuilder.Entity("FolderCleaner.Worker.Models.CleaningRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Repeat")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RepeatRange")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RunsAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CleaningRecords");
                });

            modelBuilder.Entity("FolderCleaner.Worker.Models.CleaningHistory", b =>
                {
                    b.HasOne("FolderCleaner.Worker.Models.CleaningRecord", "CleaningRecord")
                        .WithMany("CleaningHistory")
                        .HasForeignKey("CleaningRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
