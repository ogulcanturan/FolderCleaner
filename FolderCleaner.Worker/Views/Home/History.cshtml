@model List<IEnumerable<CleaningHistory>>
@{
    ViewData["Title"] = $"{nameof(FolderCleaner)} - History";
    ViewData["History"] = "active";
    int i = 0;
}
@foreach (var item in Model)
{
    if (i == 0)
    {
        <h4>Active Records</h4>
    }
    else
    {
        <h4>All History <small style="font-weight:bold">(active records have excluded)</small></h4>
    }
    @if (!(item?.Any() ?? false))
    {
        <div class="row">
            <div class="col text-center p-2">No entry</div>
        </div>
    }
    else
    {
        <table class="table table-responsive table-sm table-striped table-bordered mb-3" style="display:inline-table">
            <thead class="thead-dark">
                <tr>
                    <th>#</th>
                    <th>@nameof(CleaningHistory.RunsAt)</th>
                    <th>@nameof(CleaningHistory.TotalFiles)</th>
                    <th>@nameof(CleaningHistory.CleaningSize) (bytes)</th>
                    <th>@nameof(CleaningHistory.CreatedOn)</th>
                    <th>@nameof(CleaningHistory.UpdatedOn)</th>
                    <th>@nameof(CleaningHistory.TriggeredBy)</th>
                    <th>Status</th>
                    <th>RecordId</th>
                    @if (i != 0)
                    {
                        <th class="text-center">
                            <form asp-action="ClearTheHistory" method="post">
                                <button type="submit" class="btn-sm btn-success"><i class="fas fa-broom" style="font-size:20px;"></i></button>
                            </form>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var history in item)
                {
                    <tr>
                        <td>@history.Id</td>
                        <td>@history.RunsAt</td>
                        <td>@(i != 0 ? history.TotalFiles : history.CleaningRecord.TotalFiles)</td>
                        <td>@(i != 0 ? history.CleaningSize : history.CleaningRecord.CleaningSize)</td>
                        <td>@history.CreatedOn</td>
                        <td>@history.UpdatedOn</td>
                        <td>@history.TriggeredBy.ToString()</td>
                        <td>@history.CleaningStatusDescription</td>
                        <td>@history.CleaningRecordId</td>
                        @if(i != 0)
                        {
                            <td></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
    i++;
}